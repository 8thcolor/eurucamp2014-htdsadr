.row
  .col-md-3
    .admin-filter
      = form_tag admin_projects_path, method: :get, class: '' do
        .form-group
          = label_tag :name, 'Name:'
          = text_field_tag :name, params[:name], class: "form-control"

        .form-group
          = label_tag :namespace_id, "Namespace"
          = namespace_select_tag :namespace_id, selected: params[:namespace_id], class: 'input-large'

        .form-group
          %strong Activity
          .checkbox
            = label_tag :with_push, 'Not empty'
            = check_box_tag :with_push, 1, params[:with_push]
            &nbsp;
            %span.light Projects with push events
          .checkbox
            = label_tag :abandoned, 'Abandoned'
            = check_box_tag :abandoned, 1, params[:abandoned]
            &nbsp;
            %span.light No activity over 6 month

        %fieldset
          %strong Visibility level:
          .visibility-levels
            - Project.visibility_levels.each do |label, level|
              .checkbox
                %label
                  = check_box_tag 'visibility_levels[]', level, params[:visibility_levels].present? && params[:visibility_levels].include?(level.to_s)
                  %span.descr
                    = visibility_level_icon(level)
                    = label
        %hr
        = hidden_field_tag :sort, params[:sort]
        = submit_tag "Search", class: "btn submit btn-primary"
        = link_to "Reset", admin_projects_path, class: "btn btn-cancel"

  .col-md-9
    .panel.panel-default
      .panel-heading
        Projects (#{@projects.total_count})
        .panel-head-actions
          .dropdown.inline
            %a.dropdown-toggle.btn{href: '#', "data-toggle" => "dropdown"}
              %span.light sort:
              - if @sort.present?
                = @sort.humanize
              - else
                Name
              %b.caret
            %ul.dropdown-menu
              %li
                = link_to admin_projects_path(sort: nil) do
                  Name
                = link_to admin_projects_path(sort: 'newest') do
                  Newest
                = link_to admin_projects_path(sort: 'oldest') do
                  Oldest
                = link_to admin_projects_path(sort: 'recently_updated') do
                  Recently updated
                = link_to admin_projects_path(sort: 'last_updated') do
                  Last updated
                = link_to admin_projects_path(sort: 'largest_repository') do
                  Largest repository
          = link_to 'New Project', new_project_path, class: "btn btn-new"
      %ul.well-list
        - @projects.each do |project|
          %li
            .list-item-name
              %span{ class: visibility_level_color(project.visibility_level) }
                = visibility_level_icon(project.visibility_level)
              = link_to project.name_with_namespace, [:admin, project]
            .pull-right
              %span.label.label-gray
                = repository_size(project)
              = link_to 'Edit', edit_project_path(project), id: "edit_#{dom_id(project)}", class: "btn btn-small"
              = link_to 'Destroy', [project], data: { confirm: remove_project_message(project) }, method: :delete, class: "btn btn-small btn-remove"
        - if @projects.blank?
          .nothing-here-block 0 projects matches
    = paginate @projects, theme: "gitlab"
